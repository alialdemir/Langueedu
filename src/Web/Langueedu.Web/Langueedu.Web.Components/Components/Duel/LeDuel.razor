@namespace Langueedu.Web.Components

@inherits ComponentBase<DuelViewModel>

<div class="le-duel">
    <div class="container">
        <div class="le-duel--close">
            <LeButton Color=Color.Transparent Rounded=@Rounded.Full Command=@BindingContext.HideModalCommand>
                <i class="pe-7s-close-circle text-lg"></i>
            </LeButton>
        </div>

        <div class="row le-duel-flex-wrap-reverse">
            <div class="col-12 col-xs-12 col-sm-12 col-md-12 col-lg-7 col-xl-7">
                <LeCard>
                    <LeCardBody class="le-duel-lyrics-container"  >
                        @foreach (var item in BindingContext.Lyrics)
                        {
                            StylishInfoModel stylishInfo = Bind(x => x.StylishInfo);
                            bool isShow = stylishInfo.CurrentDuration >= item.Duration && stylishInfo.NextDuration <= item.Duration;

                            <div id="id@(item.Duration)" class='le-duel__lyrics @(isShow ? "le-duel__lyrics--active":"")'>
                                @item.Text
                            </div>
                        }
                    </LeCardBody>
                </LeCard>

                <LeStylish />
            </div>

            <div class="col-12 col-xs-12 col-sm-12 col-md-12 col-lg-5 col-xl-5">
                <LeCard>
                    <LeCardBody class="pr-0 pl-0">
                        <LeVideo />
                    </LeCardBody>
                </LeCard>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public short EntryFee { get; set; }

    [Parameter]
    public GameMode GameMode { get; set; }

    [CascadingParameter]
    BlazoredModalInstance ModalInstance { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();

        BindingContext.ModalInstance = ModalInstance;
    }
}