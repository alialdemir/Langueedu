@namespace Langueedu.Web.Components
@inherits ComponentBase<SignInViewModel>

<EditForm class="theme-form" Model="ViewModel?.LoginModel" OnValidSubmit="@HandleLogin">
    <FluentValidationValidator />

    <h4 class="text-center">LOGIN</h4>
    @*
        <div class="form-group">
              <label class="col-form-label pt-0">Your Name</label>
              <InputText type="text" Class="form-control" @bind-Value="@ViewModel.LoginModel.UserName" />
              <ValidationMessage For="@(() => ViewModel.LoginModel.UserName)" />
          </div>

          <div class="form-group">
              <label class="col-form-label">Password</label>
              <InputText type="password" Class="form-control" @bind-Value="@ViewModel.LoginModel.Password" />
              <ValidationMessage For="@(() => ViewModel.LoginModel.Password)" />
          </div>
    *@
    <div class="form-group form-row mt-3 mb-0">
        <button class="btn btn-primary btn-block" type="submit">LOGIN</button>
    </div>
    <div class="login-divider"></div>
</EditForm>
<div>
    <div>

        aaaa - @ViewModel?.LoginModel?.UserName
    </div>
</div>


@code {

    private void HandleLogin()
    {
        /* var result = await AuthService.Login(loginModel);
        if (result.IsSuccessful)
        {
        await ((CustomAuthStateProvider)AuthenticationStateProvider).LoggedIn(result.Data.AccessToken);

        UriHelper.NavigateTo("/");
        }
        else
        {
        string errorMessage = result.Error.ErrorMessages.FirstOrDefault() ?? "A system error has occurred.";
        await Swal.FireAsync(errorMessage, null, SweetAlertIcon.Error);
        }*/
    }
}